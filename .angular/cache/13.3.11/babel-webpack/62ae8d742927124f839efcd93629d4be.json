{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(http) {\n      this.http = http;\n      this.userSubject = new BehaviorSubject(null);\n      this.user$ = this.userSubject.asObservable();\n      this.URL_API = `${environment.API_URL}/api/user`;\n    }\n\n    login(data) {\n      return this.http.post(`${this.URL_API}/login`, data);\n    }\n\n    register(data) {\n      return this.http.post(`${this.URL_API}/register`, data);\n    }\n\n    setUser(user) {\n      this.userSubject.next(user);\n    }\n\n    sendCode(email) {\n      const data = {\n        correo: email\n      };\n      return this.http.post(`${this.URL_API}/sendCode`, data);\n    }\n\n    validCode(code, secret) {\n      const data = {\n        codigo: code,\n        secret: secret\n      };\n      return this.http.post(`${this.URL_API}/validCode`, data);\n    }\n\n    updatePassword(email, password) {\n      const data = {\n        correo: email,\n        password: password\n      };\n      return this.http.put(`${this.URL_API}/updatePassword`, data);\n    }\n\n    secondFactor(email) {\n      const data = {\n        correo: email\n      };\n      return this.http.post(`${this.URL_API}/secondFactor`, data);\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}