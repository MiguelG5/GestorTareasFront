{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\mikey\\\\Desktop\\\\GestorTareasFront\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport Swal from 'sweetalert2';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/icon\";\n\nfunction ResetPasswordComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 9);\n    i0.ɵɵlistener(\"submit\", function ResetPasswordComponent_ng_container_8_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.sendCode();\n    });\n    i0.ɵɵelementStart(2, \"div\", 10)(3, \"label\", 11);\n    i0.ɵɵtext(4, \"Correo Electr\\u00F3nico\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function ResetPasswordComponent_ng_container_8_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.userEmail = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"button\", 13);\n    i0.ɵɵtext(7, \" Enviar C\\u00F3digo \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.userEmail);\n  }\n}\n\nfunction ResetPasswordComponent_ng_template_9_div_12_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\", 27)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const validacion_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(validacion_r8.message);\n  }\n}\n\nfunction ResetPasswordComponent_ng_template_9_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ResetPasswordComponent_ng_template_9_div_12_ng_container_1_Template, 4, 1, \"ng-container\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const validacion_r8 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r6.password == null ? null : ctx_r6.password.hasError(validacion_r8.type)) && ((ctx_r6.password == null ? null : ctx_r6.password.dirty) || (ctx_r6.password == null ? null : ctx_r6.password.touched)));\n  }\n}\n\nfunction ResetPasswordComponent_ng_template_9_div_19_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\", 27)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const validacion_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(validacion_r11.message);\n  }\n}\n\nfunction ResetPasswordComponent_ng_template_9_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ResetPasswordComponent_ng_template_9_div_19_ng_container_1_Template, 4, 1, \"ng-container\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const validacion_r11 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r7.repeatPassword == null ? null : ctx_r7.repeatPassword.hasError(validacion_r11.type)) && ((ctx_r7.repeatPassword == null ? null : ctx_r7.repeatPassword.dirty) || (ctx_r7.repeatPassword == null ? null : ctx_r7.repeatPassword.touched)));\n  }\n}\n\nfunction ResetPasswordComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \"Restablecer Contrase\\u00F1a\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"form\", 14);\n    i0.ɵɵlistener(\"submit\", function ResetPasswordComponent_ng_template_9_Template_form_submit_2_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.updatePassword();\n    });\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵelement(4, \"i\", 16);\n    i0.ɵɵelementStart(5, \"div\", 17);\n    i0.ɵɵelement(6, \"input\", 18);\n    i0.ɵɵelementStart(7, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ResetPasswordComponent_ng_template_9_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.hide = !ctx_r16.hide;\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"label\", 20);\n    i0.ɵɵtext(11, \"Nueva Contrase\\u00F1a:\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(12, ResetPasswordComponent_ng_template_9_div_12_Template, 2, 1, \"div\", 21);\n    i0.ɵɵelementStart(13, \"div\", 15);\n    i0.ɵɵelement(14, \"i\", 22);\n    i0.ɵɵelementStart(15, \"div\", 17);\n    i0.ɵɵelement(16, \"input\", 23);\n    i0.ɵɵelementStart(17, \"label\", 24);\n    i0.ɵɵtext(18, \"Repetir Contrase\\u00F1a\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(19, ResetPasswordComponent_ng_template_9_div_19_Template, 2, 1, \"div\", 21);\n    i0.ɵɵelementStart(20, \"button\", 25);\n    i0.ɵɵtext(21, \" Restablecer Contrase\\u00F1a \");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.resetPForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"type\", ctx_r2.hide ? \"password\" : \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx_r2.hide);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.hide ? \"visibility_off\" : \"visibility\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.validaciones.password);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"type\", ctx_r2.hide ? \"password\" : \"text\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.validaciones.repeatPassword);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.resetPForm.invalid);\n  }\n}\n\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(loginService, router, fb) {\n      this.loginService = loginService;\n      this.router = router;\n      this.fb = fb;\n      this.userEmail = '';\n      this.isResetForm = false;\n      this.hide = true;\n      this.validaciones = {\n        password: [{\n          type: 'required',\n          message: 'La contraseña es requerida'\n        }, {\n          type: 'pattern',\n          message: 'Este campo debe contener al menos 1 mayusculas, minusculas, numeros y caracteres especiales'\n        }, {\n          type: 'minlength',\n          message: 'El mínimo de caracteres es 8'\n        }],\n        repeatPassword: [{\n          type: 'required',\n          message: 'El campo es requerido'\n        }, {\n          type: 'passwordMismatch',\n          message: 'Las contraseñas no coinciden'\n        }]\n      };\n      this.resetPForm = this.fb.group({\n        password: ['', [Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/), Validators.minLength(8)]],\n        repeatPassword: ['', Validators.required]\n      }, {\n        validator: this.passwordMatchValidator('password', 'repeatPassword')\n      });\n    }\n\n    ngOnInit() {}\n\n    sendCode() {\n      var _this = this;\n\n      if (this.userEmail.trim().length > 0) {\n        this.loginService.sendCode(this.userEmail).subscribe(resp => {\n          if (resp.estado === 0) {\n            Swal.fire({\n              text: resp.mensaje,\n              icon: 'success',\n              timer: 3000,\n              backdrop: false\n            }).then( /*#__PURE__*/_asyncToGenerator(function* () {\n              const {\n                value: code\n              } = yield Swal.fire({\n                title: 'Restablecer Contraseña - Gustoes',\n                text: 'Por favor, introduce el código enviado a tu correo:',\n                input: 'number',\n                inputPlaceholder: 'Código',\n                inputAttributes: {\n                  maxLength: '6'\n                },\n                showCancelButton: false,\n                cancelButtonText: 'Cancelar',\n                backdrop: false\n              });\n\n              _this.loginService.validCode(code, resp.objeto).subscribe(resp => {\n                if (resp.estado === 0) {\n                  Swal.fire({\n                    title: 'Código valido',\n                    text: 'El código ha sido validado correctamente. Ahora puedes proceder con el restablecimiento de tu contraseña.',\n                    icon: 'success',\n                    timer: 3000,\n                    backdrop: false,\n                    showConfirmButton: false\n                  }).then(() => {\n                    _this.isResetForm = true;\n                  });\n                }\n              }, error => {\n                Swal.fire({\n                  title: 'Error',\n                  text: error.error.mensaje,\n                  icon: 'error',\n                  timer: 3000,\n                  backdrop: false\n                });\n                console.error(error);\n              });\n            }));\n          } else {\n            Swal.fire({\n              title: 'Error',\n              text: resp.mensaje,\n              icon: 'error',\n              timer: 3000,\n              backdrop: false\n            });\n          }\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error en el servidor',\n            icon: 'error',\n            timer: 3000,\n            backdrop: false\n          });\n          console.error(error);\n        });\n      } else {\n        Swal.fire({\n          text: 'Introduce tu correo electronico',\n          icon: 'info',\n          timer: 2000,\n          backdrop: false,\n          showConfirmButton: false\n        });\n      }\n    }\n\n    updatePassword() {\n      var _a;\n\n      this.loginService.updatePassword(this.userEmail, (_a = this.resetPForm.get('password')) === null || _a === void 0 ? void 0 : _a.value).subscribe(resp => {\n        if (resp.estado === 0) {\n          Swal.fire({\n            title: 'Contraseña Reestablecida',\n            text: resp.mensaje,\n            icon: 'success',\n            timer: 3000,\n            backdrop: `\n              no-repeat\n            `,\n            showConfirmButton: false\n          }).then(() => {\n            this.router.navigate(['/login']);\n          });\n        }\n      }, error => {\n        Swal.fire({\n          title: 'Error',\n          text: error.error.mensaje,\n          icon: 'error',\n          timer: 3000,\n          backdrop: false\n        });\n        console.error(error);\n      });\n    }\n\n    passwordMatchValidator(controlName, matchingControlName) {\n      return formGroup => {\n        const control = formGroup.get(controlName);\n        const matchingControl = formGroup.get(matchingControlName);\n\n        if ((matchingControl === null || matchingControl === void 0 ? void 0 : matchingControl.value) == null || (matchingControl === null || matchingControl === void 0 ? void 0 : matchingControl.value) == '') {\n          matchingControl === null || matchingControl === void 0 ? void 0 : matchingControl.setErrors({\n            required: true\n          });\n          return {\n            required: true\n          };\n        } else if (control && matchingControl && control.value !== matchingControl.value) {\n          matchingControl.setErrors({\n            passwordMismatch: true\n          });\n          return {\n            passwordMismatch: true\n          };\n        } else {\n          matchingControl === null || matchingControl === void 0 ? void 0 : matchingControl.setErrors(null);\n          return null;\n        }\n      };\n    }\n\n    get password() {\n      return this.resetPForm.get('password');\n    }\n\n    get repeatPassword() {\n      return this.resetPForm.get('repeatPassword');\n    }\n\n  }\n\n  ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n    return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  ResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordComponent,\n    selectors: [[\"app-reset-password\"]],\n    decls: 11,\n    vars: 2,\n    consts: [[1, \"p-5\"], [1, \"row\", \"justify-content-center\", \"rounded-3\"], [1, \"col-md-6\"], [1, \"card\", \"rounded\"], [1, \"card-header\", \"text-white\", \"rounded\"], [1, \"mb-0\"], [1, \"card-body\"], [4, \"ngIf\", \"ngIfElse\"], [\"newPassword\", \"\"], [\"action\", \"procesar_formulario.php\", 3, \"submit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Introduce tu correo electr\\u00F3nico\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn1\", \"btn-md\", \"mt-4\"], [3, \"formGroup\", \"submit\"], [1, \"d-flex\", \"flex-row\", \"align-items-center\", \"mb-4\"], [1, \"fas\", \"fa-lock\", \"fa-lg\", \"me-3\", \"fa-fw\"], [\"data-mdb-input-init\", \"\", 1, \"form-outline\", \"flex-fill\", \"mb-0\"], [\"formControlName\", \"password\", \"id\", \"form3Example4c\", 1, \"form-control\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"for\", \"form3Example4c\", 1, \"form-label\"], [4, \"ngFor\", \"ngForOf\"], [1, \"fas\", \"fa-key\", \"fa-lg\", \"me-3\", \"fa-fw\"], [\"formControlName\", \"repeatPassword\", \"id\", \"form3Example4cd\", 1, \"form-control\", 3, \"type\"], [\"for\", \"form3Example4cd\", 1, \"form-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [4, \"ngIf\"], [\"id\", \"nombreError\", 1, \"text-danger\", \"fw-bold\"]],\n    template: function ResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n        i0.ɵɵtext(6, \"Restablecer Contrase\\u00F1a\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵtemplate(8, ResetPasswordComponent_ng_container_8_Template, 8, 1, \"ng-container\", 7);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(9, ResetPasswordComponent_ng_template_9_Template, 22, 9, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(10);\n\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isResetForm)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i4.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.NgModel, i3.FormGroupDirective, i3.FormControlName, i5.MatButton, i6.MatSuffix, i7.MatIcon, i4.NgForOf],\n    styles: [\".card-header[_ngcontent-%COMP%], .card-body[_ngcontent-%COMP%], .btn1[_ngcontent-%COMP%]{background-color:#7d46ff;color:#fff;font-family:monospace;border:2px solid white}\"]\n  });\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}